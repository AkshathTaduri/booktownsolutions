import fsPromises from "fs/promises";
import path from "path";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { UserProvider } from "./context/UserContext";
import "./globals.css";
import Header from "./components/header";
import Navbar from "./components/navbar";
import { CartProvider } from "./context/CartContext";

interface SubCategory {
  id: number;
  sub_category_name: string;
}

interface Category {
  id: number;
  category_name: string;
  subcategories?: SubCategory[];
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function fetchCategories(): Promise<Category[]> {
  const filePath = path.join(process.cwd(), "data/categories.json");
  const jsonData = await fsPromises.readFile(filePath, "utf-8");
  return JSON.parse(jsonData);
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const categories = await fetchCategories(); // Fetch categories here

  return (
    <html lang="en">
      <CartProvider>
        <UserProvider>
          <body>
            <Header />
            <Navbar categories={categories} /> {/* Pass categories to Navbar */}
            <main>{children}</main>
          </body>
        </UserProvider>
      </CartProvider>
    </html>
  );
}
